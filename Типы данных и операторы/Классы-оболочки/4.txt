a1==i1 true
b1==i1 true
a1==b1 false
a1.equals(i1) -> true
b1.equals(i1) -> true
a1.equals(b1) -> true
a2==i2 true
b2==i2 true
a2==b2 true
a2.equals(i2) -> true
b2.equals(i2) -> true
a2.equals(b2) -> true

В классе Integer в Java есть специальный механизм — кэширование чисел от -128 до 127.
Это сделано, чтобы не создавать каждый раз новый объект для этих значений. 
Если мы работаем с числами из этого диапазона, Java просто берёт уже готовый объект из памяти, а не выделяет новое место. 
Таким образом, когда мы используем одно и то же число, например 127, 
для него будет одна и та же ссылка в памяти, и программа работает быстрее.


Когда значение выходит за пределы диапазона -128..127, для каждого объекта Integer создаётся новая ссылка.
Поэтому a1 == b1 возвращает false, поскольку это сравнение ссылок, а объекты разные.
Однако equals сравнивает значения, а не ссылки, поэтому a1.equals(b1) возвращает true.

Значение 127 попадает в диапазон кэширования.
Поэтому переменные a2 и b2 ссылаются на один и тот же объект из кэша.
a2 == b2 возвращает true, потому что ссылки одинаковые.
Сравнения с использованием equals также возвращают true, поскольку значения совпадают.
